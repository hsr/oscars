#!/bin/sh 
#
# Export configuration files from the distribution directory into the production directory.
#
# syntax: exportconfig <path_to_distribution> <patch_to_production>
#
#

SERVICE=OSCARSService
SERVICE_INT=OSCARSInternalService
MODULE=api

OSCARS_DIST=$1
OSCARS_HOME=$2
DST_LOGDIR=$3
BUILD_ROOT=$4

source $OSCARS_DIST/utils/bin/configLib.sh

verifyArgs $OSCARS_DIST $OSCARS_HOME
verifySvcName $SERVICE

SRC_DIR=$OSCARS_DIST/$MODULE/config
DST_DIR=$OSCARS_HOME/$SERVICE/conf
DST_DIR_INT=$OSCARS_HOME/$SERVICE_INT/conf
if [ -n "$BUILD_ROOT" ]; then
    DST_DIR=${BUILD_ROOT}/${DST_DIR}
    DST_DIR_INT=${BUILD_ROOT}/${DST_DIR_INT}
fi
if [ -z "$DST_LOGDIR" ]; then
    DST_LOGDIR=${OSCARS_HOME}/logs
fi

mkdir -p $DST_LOGDIR
mkdir -p $DST_DIR
mkdir -p $DST_DIR_INT

OSCARS_DIST=$1
OSCARS_HOME=$2

# PORT is the deployment port of the public OSCARS API
PORT=9001

if [ ! -f $DST_DIR/$MANIFEST ] ; then
    cp $SRC_DIR/$MANIFEST  $DST_DIR/$MANIFEST      
fi

# copy and edit the config.yaml files so the public API's endpoint is the set to the hostname
localhost=`hostname -f`
if [ ! -f $DST_DIR/$CONFIG_HTTP ] ; then
    sed s,localhost,$localhost, < $SRC_DIR/$CONFIG_HTTP > $DST_DIR/$CONFIG_HTTP
fi
if [ ! -f $DST_DIR/$CONFIG_SSL  ] ; then
    sed s,localhost,$localhost, < $SRC_DIR/$CONFIG_SSL > $DST_DIR/$CONFIG_SSL
fi
# the internalAPI endpoint needs to match the public one because they share the same server-cxf file and
# thus use the ocsarsidc keystore.
if [ ! -f $DST_DIR_INT/config-internal.HTTP.yaml ]; then
    sed s,localhost,$localhost, < $SRC_DIR/config-internal.HTTP.yaml > $DST_DIR_INT/config-internal.HTTP.yaml
fi
if [ ! -f $DST_DIR_INT/config-internal.SSL.yaml ]; then
    sed s,localhost,$localhost, < $SRC_DIR/config-internal.SSL.yaml > $DST_DIR_INT/config-internal.SSL.yaml
fi

# Copy CXF configuration files for both client and server. Patch publishing information in server

if [ ! -f $DST_DIR/$CXF_SERVER_HTTP_CFG ] ; then
    sed -e s,deploy-host,$localhost:$PORT,  -e s,wsdl-location,$OSCARS_HOME/wsdl/$SERVICE, < $SRC_DIR/$CXF_SERVER_HTTP_CFG > $DST_DIR/$CXF_SERVER_HTTP_CFG
fi
if [ ! -f $DST_DIR/$CXF_SERVER_SSL_CFG ] ; then
    sed -e s,deploy-host,$localhost:$PORT,  -e s,wsdl-location,$OSCARS_HOME/wsdl/$SERVICE, <  $SRC_DIR/$CXF_SERVER_SSL_CFG > $DST_DIR/$CXF_SERVER_SSL_CFG
fi
if [ ! -f $DST_DIR/$CXF_CLIENT_HTTP_CFG ] ; then
    cp $SRC_DIR/$CXF_CLIENT_HTTP_CFG  $DST_DIR/$CXF_CLIENT_HTTP_CFG
fi
if [ ! -f $DST_DIR/$CXF_CLIENT_SSL_CFG ] ; then
    cp $SRC_DIR/$CXF_CLIENT_SSL_CFG  $DST_DIR/$CXF_CLIENT_SSL_CFG
fi
if [ ! -f $DST_DIR/client-ut-cxf-ssl.xml ] ; then
    cp $SRC_DIR/client-ut-cxf-ssl.xml   $DST_DIR/client-ut-cxf-ssl.xml 
fi
if [ ! -f $DST_DIR/client-cxf-DEV.xml ] ; then
    cp $SRC_DIR/client-cxf-DEV.xml   $DST_DIR/client-cxf-DEV.xml
fi

# Copy keystore property file 
cp $SRC_DIR/clientKeystore.properties $DST_DIR/clientKeystore.properties
cp $SRC_DIR/serverKeystore.properties $DST_DIR/serverKeystore.properties

# log4j
if [ ! -f $DST_DIR/$LOG4J_PROPS_INFO ] ; then
    sed -e "s,$MODULE\.log,$DST_LOGDIR/$SERVICE.log," -e "s,oscars\.log,$DST_LOGDIR/oscars.log," < $SRC_DIR/$LOG4J_PROPS_INFO > $DST_DIR/$LOG4J_PROPS_INFO
fi
if [ ! -f $DST_DIR/$LOG4J_PROPS_DEBUG ] ; then
    sed s,$MODULE\.log,$DST_LOGDIR/$SERVICE.log, <  $SRC_DIR/$LOG4J_PROPS_DEBUG > $DST_DIR/$LOG4J_PROPS_DEBUG
    fi
if [ ! -f $DST_DIR/$LOG4J_PROPS_MESSAGE ] ; then
    sed s,$MODULE\.log,$DST_LOGDIR/$SERVICE.log, <  $SRC_DIR/$LOG4J_PROPS_MESSAGE > $DST_DIR/$LOG4J_PROPS_MESSAGE
fi


