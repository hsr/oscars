<?xml version="1.0" encoding="UTF-8"?>
<!--
    The OGF takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights.  Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the OGF Secretariat.

    The OGF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to practice this recommendation.  Please address the information to the OGF Executive Director.

    This document and the information contained herein is provided on an "As Is" basis and the OGF disclaims all warranties, express or implied, including but not limited to any warranty that the use of the information herein will not infringe any rights or any implied warranties of merchantability or fitness for a particular purpose.

    Copyright (C) Open Grid Forum (2009-2012). All Rights Reserved.

    This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the OGF or other organizations, except as needed for the purpose of developing Grid Recommendations in which case the procedures for copyrights defined in the OGF Document process must be followed, or as required to translate it into languages other than English.

    The limited permissions granted above are perpetual and will not be revoked by the OGF or its successors or assignees.

    Open Grid Forum NSI Connection Services Protocol v2.0

    Description: This is the types schema for the reference web services implementation of the OGF NSI Connection Services Protocol v2.0. This can be considered the transport independent protocol representation.  Comments and questions can be directed to the mailing list group mailing list (nsi-wg@ogf.org).
-->
<xsd:schema targetNamespace="http://schemas.ogf.org/nsi/2013/04/connection/types"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:ftypes="http://schemas.ogf.org/nsi/2013/04/framework/types"
    xmlns:tns="http://schemas.ogf.org/nsi/2013/04/connection/types">

    <xsd:annotation>
        <xsd:documentation xml:lang="en">
            This is an XML schema document describing the OGF NSI Connection
            Services protocol version 2.0. The Connection Service is message
            based command protocol that operates between a Requester
            Network Service Agent (NSA) and a Provider NSA. The protocol includes
            a set of defined primitives that are intended to provide the control
            necessary to manage the lifecycle of a connection reservation.
            
            The following primitives are supported in this version of the NSI CS
            protocol:
            
            1. Reserve - Make a request to reserve network resources for a
            connection between two STP's constrained by a certain service
            parameters or request a modification of an existing reservation.
            Any required resources will be pre-allocated and held until
            the commit of this reserve is received.
            
            3. ReserveCommit - Commit a previously allocated reservation
            or modification on a reservation.
            
            4. ReserveAbort - Cancel a pending reservation or modification
            and release any associated resources.
            
            5. Provision - Provider NSA has been given permission to setup a
            reservation (associated with a previous reserve message) on
            the Requester NSA's behalf but subject to the constraints of
            the requested service.
            
            6. Release - Provider NSA should release the provisioned resources
            without removing the reservation.
            
            7. Terminate - Provider NSA should release the provisioned resources
            and terminate the reservation.
            
            8. QuerySummary - Mechanism for either NSA to query the other NSA
            for a set of connection service instances between the RA-PA pair.
            The returned results will be a summary of the reservation
            information.
            
            9. QuerySummarySync - Mechanism for a requester NSA to query the
            provider NSA for a set of connection service instances between the
            RA-PA pair. The returned results will be a summary of the
            reservation information.  This is a synchronous blocking operation
            and not asynchronous like QuerySummary and QueryRecursive.
            
            10. QueryRecursive - Mechanism for either NSA to query the other
            NSA for a set of connection service instances between the RA-PA
            pair. The returned results will be a detailed list of reservation
            information collected by recursively traversing the reservation
            tree.

            11. QueryNotification - Mechanism for a requester NSA to query the
            provider NSA for a set of notifications against a connectionId.  The
            returned results will be a list of notifications for the specified
            connectionId.

            12. QueryNotificationSync - Mechanism for a requester NSA to query the
            provider NSA for a set of notifications against a connectionId.  The
            returned results will be a list of notifications for the specified
            connectionId.  This is a synchronous blocking operation.
            
            In addition, there are four notification primatives:
            
            1. errorEvent - An autonomous message issued from a Provider NSA to
            a Requester NSA when an existing reservation encounters an
            autonomous error condition such as being administratively terminated
            before the reservation's scheduled end-time.
            
            2. reserveTimeout -An autonomous message issued from a Provider NSA to
            a Requester NSA when a timeout on an existing reserve request occurs
            and uncommitted resources have been freed.
            
            3. dataPlaneStateChange - An autonomous message issued from a Provider
            NSA to a Requester NSA when a data plane state change event has occured
            within the network.
            
            4. messageDeliveryTimeout - Notification message for a message
            transport layer delivery timeout of an NSI CS request message.
            In the event of an MTL or Coordinator timeout, the Coordinator
            will generate this message delivery failure notification and
            send it up the workflow tree (towards the uRA).
            
            If the uRA wants to request a resend of the the original message
            it must issue the original operation again with the same
            correlationId. Aggregators receiving the request SHOULD only
            attempt redelivery of the message to children that it did not
            receive an acknowledgement for (i.e. MTL timeout) or reply to
            (i.e. Coordinator timeout) the original message.
            
            The Connection Service protocol is an asynchronous protocol where
            each primitive may consist of four operations:
            
            1. Request - A Requester NSA issues an operation request message
            such as "reserve" to the Provider NSA. The Requester NSA can
            expect an response to the request at some point in the future.
            
            2. Response - A Provider NSA may issue an immediate response
            to the Requester NSA providing needed progress information.
            For example, a requester NSA issuing a "reserve" request can
            expect a "reserveResponse" message providing the connectionId
            needed for querying reservation progress.
            
            3. Confirmed - A Provider NSA sends this positive operation
            response message (such as "reserveConfirmed") to the Requester
            NSA that issued the original request message ("reserveRequest").
            
            4. Failed - A Provider NSA sends this negative operation response
            message (such as "reserveFailed") to the Requester NSA that
            issued the original request message ("reserveRequest").
        </xsd:documentation>
    </xsd:annotation>
    
    <!-- Import the common NSI framework types. -->
    <xsd:import namespace="http://schemas.ogf.org/nsi/2013/04/framework/types"
        schemaLocation="ogf_nsi_framework_types_v2_0.xsd"/>
    
    <!-- ******************************************************************
         *                  NSI protocol messages                         *
         ****************************************************************** -->

    <!-- ********** Reserve message elements ********** -->
    <xsd:element name="reserve"          type="tns:ReserveType" />
    <xsd:element name="reserveResponse"  type="tns:ReserveResponseType" />
    <xsd:element name="reserveConfirmed" type="tns:ReserveConfirmedType" />
    <xsd:element name="reserveFailed"    type="tns:GenericFailedType" />

    <xsd:element name="reserveCommit"          type="tns:GenericRequestType" />
    <xsd:element name="reserveCommitConfirmed" type="tns:GenericConfirmedType" />
    <xsd:element name="reserveCommitFailed"    type="tns:GenericFailedType" />
    
    <xsd:element name="reserveAbort"          type="tns:GenericRequestType" />
    <xsd:element name="reserveAbortConfirmed" type="tns:GenericConfirmedType" />

    <!-- ********** Provision message elements ********** -->
    <xsd:element name="provision"            type="tns:GenericRequestType" />
    <xsd:element name="provisionConfirmed"   type="tns:GenericConfirmedType" />

    <!-- ********** Release message elements ********** -->
    <xsd:element name="release"              type="tns:GenericRequestType" />
    <xsd:element name="releaseConfirmed"     type="tns:GenericConfirmedType" />

    <!-- ********** Terminate message elements ********** -->
    <xsd:element name="terminate"            type="tns:GenericRequestType" />
    <xsd:element name="terminateConfirmed"   type="tns:GenericConfirmedType" />

    <!-- ********** QuerySummary message elements ********** -->
    <xsd:element name="querySummary"           type="tns:QueryType" />
    <xsd:element name="querySummaryConfirmed"  type="tns:QuerySummaryConfirmedType" />
    <xsd:element name="querySummaryFailed"     type="tns:QueryFailedType" />

    <!-- ********** QueryRecursive message elements ********** -->
    <xsd:element name="queryRecursive"           type="tns:QueryType" />
    <xsd:element name="queryRecursiveConfirmed"  type="tns:QueryRecursiveConfirmedType" />
    <xsd:element name="queryRecursiveFailed"     type="tns:QueryFailedType" />

    <!-- ********** QuerySummarySync message elements ********** -->
    <xsd:element name="querySummarySync"           type="tns:QueryType" />
    <xsd:element name="querySummarySyncConfirmed"  type="tns:QuerySummaryConfirmedType" />
    <xsd:element name="querySummarySyncFailed"     type="tns:QueryFailedType" />

    <!-- ********** QuerySummary message elements ********** -->
    <xsd:element name="queryNotification"           type="tns:QueryNotificationType" />
    <xsd:element name="queryNotificationConfirmed"  type="tns:QueryNotificationConfirmedType" />
    <xsd:element name="queryNotificationFailed"     type="tns:QueryFailedType" />
    
    <!-- ********** QuerySummarySync message elements ********** -->
    <xsd:element name="queryNotificationSync"           type="tns:QueryNotificationType" />
    <xsd:element name="queryNotificationSyncConfirmed"  type="tns:QueryNotificationConfirmedType" />
    <xsd:element name="queryNotificationSyncFailed"     type="tns:QueryFailedType" />
    
    <!-- ********** Notification message elements ********** -->
    <xsd:element name="errorEvent"             type="tns:ErrorEventType" />
    <xsd:element name="reserveTimeout"         type="tns:ReserveTimeoutRequestType" />
    <xsd:element name="dataPlaneStateChange"   type="tns:DataPlaneStateChangeRequestType" />
    <xsd:element name="messageDeliveryTimeout" type="tns:MessageDeliveryTimeoutRequestType" />

    <!-- ********** Acknowledgment message element ********** -->
    <xsd:element name="acknowledgment" type="tns:GenericAcknowledgmentType" />
    
    <!-- ********** Fault message element ********** -->
    <xsd:element name="serviceException" type="ftypes:ServiceExceptionType"/>
    
    <!-- ******************************************************************
        *                   NSI message types                            *
        ****************************************************************** -->
    
    <xsd:complexType name="ReserveType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A type definition modeling the reserve message that allows a
                Requester NSA to reserve network resources for a connection
                between two STP's constrained by a certain service parameters.
                This operation allows a Requester NSA to check the feasibility
                of connection reservation or a modification to an existing
                reservation. Any resources associated with the reservation or
                modification will be allocated and held until a reserveConfirmed 
                is received or timeout occurs.

                Elements:
                
                connectionId - The Provider NSA assigned connectionId for this
                reservation. This value will be unique within the context of the
                Provider NSA.  Provided in reserve request only when an existing
                reservation is being modified.
                
                globalReservationId - An optional global reservation id that can be
                used to correlate individual related service reservations through
                the network. This must be populated with a Universally Unique
                Identifier (UUID) URN as per ITU-T Rec. X.667 | ISO/IEC 9834-8:2005
                and IETF RFC 4122.
                
                description - An optional description for the service reservation.
                
                criteria - Reservation request criteria including start and end
                time, service attributes, and requested path for the service.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="ftypes:ConnectionIdType" minOccurs="0" />
            <xsd:element name="globalReservationId" type="tns:GlobalReservationIdType" minOccurs="0" />
            <xsd:element name="description"         type="xsd:string" minOccurs="0" />
            <xsd:element name="criteria"            type="tns:ReservationRequestCriteriaType" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ReserveResponseType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the reserveResponse message. A Provider NSA
                sends this reserveResponse message immediately after receiving
                the reservation request to inform the Requester NSA of the
                connectionId allocated to their reservation request.  This
                connectionId can then be used to query reservation progress.
                
                Elements:
                
                connectionId - The Provider NSA assigned connectionId for this
                reservation request. This value will be unique within the context
                of the Provider NSA.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId" type="ftypes:ConnectionIdType" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="ReserveConfirmedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the reserveConfirmed message. A Provider NSA
                sends this positive reserveRequest response to the Requester NSA
                that issued the original request message.
                
                Elements:
                
                connectionId - The Provider NSA assigned connectionId for this
                reservation. This value will be unique within the context
                of the Provider NSA.
                
                globalReservationId - An optional global reservation id that can be
                used to correlate individual related service reservations through
                the network. This must be populated with a Universally Unique
                Identifier (UUID) URN as per ITU-T Rec. X.667 | ISO/IEC 9834-8:2005
                and IETF RFC 4122.
                
                description - An optional description for the service reservation.
                
                criteria - A set of versioned reservation criteria information.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="ftypes:ConnectionIdType" />
            <xsd:element name="globalReservationId" type="tns:GlobalReservationIdType" minOccurs="0" />
            <xsd:element name="description"         type="xsd:string" minOccurs="0" />
            <xsd:element name="criteria"            type="tns:ReservationConfirmCriteriaType" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="QueryType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the querySummary message providing a mechanism
                for a Requester NSA to query a Provider NSA for a set of connection
                service reservation instances between the RA-PA pair. This message
                can also be used as a status polling mechanism.
                
                Elements compose a filter for specifying the reservations to return
                in response to the query operation. Supports the querying of reservations
                based on connectionId or globalReservationId. Filter items specified
                are OR'ed to build the match criteria. If no criteria are specified
                then all reservations associated with the requesting NSA are returned.

                Elements:

                connectionId - Return reservations containing this connectionId.

                globalReservationId - Return reservations containing this
                globalReservationId.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:choice>
                <xsd:element name="connectionId"        type="ftypes:ConnectionIdType" minOccurs="0" maxOccurs="unbounded" />
                <xsd:element name="globalReservationId" type="tns:GlobalReservationIdType" minOccurs="0" maxOccurs="unbounded" />
            </xsd:choice>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="QuerySummaryConfirmedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This is the type definition for the querySummaryConfirmed message
                (both synchronous and asynchronous versions). An NSA sends this
                positive querySummaryRequest response to the NSA that issued the
                original request message.  There can be zero or more results
                retuned in this confirmed message depending on the number of
                matching reservation results.

                Elements:

                reservation - Resulting summary set of connection reservations
                matching the query criteria.

                If there were no matches to the query then no reservation
                elements will be present.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="reservation"  type="tns:QuerySummaryResultType" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="QueryRecursiveConfirmedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This is the type definition for the queryRecursiveConfirmed
                message.  An NSA sends this positive queryRecursiveRequest
                response to the NSA that issued the original request message.
                
                Elements:
                
                reservation - Resulting recursive set of connection reservations
                matching the query criteria.
                
                If there were no matches to the query then no reservation
                elements will be present.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="reservation" type="tns:QueryRecursiveResultType" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="QueryFailedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A query "Failed" message type sent as request in response to a
                failure to process a queryRequest message.  This is message is
                returned as a result of a processing error and not for the case
                where a query returns an empty result set.
                
                Elements:
                
                ServiceException - Specific error condition - the reason for the
                failure.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="serviceException" type="ftypes:ServiceExceptionType" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="QueryNotificationType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the QueryNotification message providing a
                mechanism for a Requester NSA to query a Provider NSA for a
                set of notifications against a specific connectionId.
                
                Elements compose a filter for specifying the notifications to
                return in response to the query operation.  The filter query
                provides an inclusive range of notification identifiers based
                on connectionId.
                
                Elements:
                
                connectionId - Notifications for this connectionId.
                
                startNotificationId - The start of the range of notificationIds
                to return.  If not present then the query should start from
                oldest notificationId available.
                
                endNotificationId - The end of the range of notificationIds
                to return.  If not present then the query should end with
                the newest notificationId available.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId" type="ftypes:ConnectionIdType" />
            <xsd:element name="startNotificationId" type="xsd:int" minOccurs="0" />
            <xsd:element name="endNotificationId" type="xsd:int" minOccurs="0" />     
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="QueryNotificationConfirmedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A query notification confirmation containing a list of notification
                messages matching the specified query criteria.
                
                Elements:
                
                errorEvent - Error event notification.
                
                reserveTimeout - Reserve timeout notification.
                
                dataPlaneStateChange - A data plane state change notification.
                
                messageDeliveryTimeout - Message delivery timeout notification.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:choice minOccurs="0" maxOccurs="unbounded">
                <xsd:element ref="tns:errorEvent" />
                <xsd:element ref="tns:reserveTimeout" />
                <xsd:element ref="tns:dataPlaneStateChange" />
                <xsd:element ref="tns:messageDeliveryTimeout" />
            </xsd:choice>
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="GenericRequestType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This is a generic type definition for request messages such as
                provision, release, terminate, and forcedEnd that only need a
                connectionId as a request parameter.

                Elements:
                
                connectionId - The Provider NSA assigned connectionId for this
                reservation. This value will be unique within the context of the 
                Provider NSA.
         </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="ftypes:ConnectionIdType" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="GenericConfirmedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This is a generic type definition for a "Confirmed" messages in
                response to a successful processing of a previous "Request"
                message such as provision, release, and terminate.

                Elements:

                connectionId - The Provider NSA assigned connectionId for this
                reservation request. This value will be unique within the context
                of the Provider NSA.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"           type="ftypes:ConnectionIdType" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="GenericFailedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A generic "Failed" message type sent as request in response to a
                failure to process a previous protocol "Request" message.  This is
                used in response to all request types that can return an error.

                Elements:

                connectionId - The Provider NSA assigned connectionId for this
                reservation. This value will be unique within the context
                of the Provider NSA.

                connectionStates - Overall connection state for the reservation.

                serviceException - Specific error condition - the reason for the
                failure.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="ftypes:ConnectionIdType" />
            <xsd:element name="connectionStates"    type="tns:ConnectionStatesType" />
            <xsd:element name="serviceException"    type="ftypes:ServiceExceptionType" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="NotificationBaseType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A base type definition for an autonomous message issued from a
                Provider NSA to a Requester NSA.
                
                Elements:
                
                connectionId - The Provider NSA assigned connectionId that this
                notification is against.

                notificationId - A notification identifier that is unique in the
                context of a connectionId.  This is a linearly increasing
                identifier that can be used for ordering notifications in the
                context of the connectionId.
                
                timeStamp - Time the event was generated on the originating NSA.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"     type="ftypes:ConnectionIdType" />
            <xsd:element name="notificationId"   type="tns:NotificationIdType" />
            <xsd:element name="timeStamp"        type="ftypes:DateTimeType" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="ErrorEventType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for an autonomous message issued from a
                Provider NSA to a Requester NSA when an existing reservation
                encounters an autonomous error condition such as being
                administratively terminated before the reservation's scheduled
                end-time.
                
                Elements:
                
                event - The type of event that generated this notification.
                
                additionalInfo - Type/value pairs that can provide additional
                error context as needed.
                
                serviceException - Specific error condition - the reason for the
                generation of the error event.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension  base="tns:NotificationBaseType">
                <xsd:sequence>
                    <xsd:element name="event"               type="tns:EventEnumType" />
                    <xsd:element name="additionalInfo"      type="ftypes:TypeValuePairListType" minOccurs="0" />
                    <xsd:element name="serviceException"    type="ftypes:ServiceExceptionType" minOccurs="0" />
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>                
    </xsd:complexType>

    <xsd:complexType name="ReserveTimeoutRequestType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the reserve timeout notification message.
                This is an autonomous message issued from a Provider NSA to
                a Requester NSA when a timeout on an existing reserve request
                occurs and uncommitted resources have been freed. The type of
                event is orignaated from a uPA, and propagated up the request
                tree to the originating uRA.  Aggregator NSA will map the
                received connectionId into a context understood by the next
                parent NSA in the reuqest tree, then propagate the event
                upwards.  The originating connectionId and NSA are provided in
                separate elements to maintin the original context generating
                the timeout.  The timeoutValue and timeStamp are populated
                by the originating NSA and propagated up the tree untouched.
                
                Elements:

                timeoutValue - The timeout value in seconds that expired this
                reservation.
                
                originatingConnectionId - The connectionId that triggered the
                reserve timeout.
                
                originatingNSA - The NSA originating the timeout event.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension  base="tns:NotificationBaseType">
                <xsd:sequence>
                    <xsd:element name="timeoutValue"            type="xsd:int" />
                    <xsd:element name="originatingConnectionId" type="ftypes:ConnectionIdType" />
                    <xsd:element name="originatingNSA"          type="ftypes:NsaIdType" />
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>                
    </xsd:complexType>
    
    <xsd:complexType name="DataPlaneStateChangeRequestType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the data plane state change notification
                message.
                
                This notification message sent up from a PA when a data plane
                status has changed. Possible data plane status changes are:
                activation, deactivation and activation version change.
                
                Elements:
                
                dataPlaneStatus - Current data plane activation state for the
                reservation identified by connectionId.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension  base="tns:NotificationBaseType">
                <xsd:sequence>
                    <xsd:element name="dataPlaneStatus"  type="tns:DataPlaneStatusType" />
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>                
    </xsd:complexType>
    
    <xsd:complexType name="MessageDeliveryTimeoutRequestType">
        <xsd:annotation>
            <xsd:documentation  xml:lang="en">
                A notification message type definition for the Message Transport
                Layer (MTL) delivery timeout of a request message. In the event
                of an MTL timed out or Coordinator timeout, the Coordinator will
                generate this message delivery failure notification and send it
                up the workflow tree (towards the uRA).
                
                An MTL timeout can be generated as the result of a timeout
                on receiving an ACK message for a corresponding send request.
                A Coordinator timeout can occur when no confirm or fail reply
                has been received to a previous request issued by the
                Coordinator.  In both cases the local timers for these timeout
                conditions are locally defined.
                
                Elements:
                
                correlationId - This value indicates the correlationId of
                the original message that the transport layer failed to
                send.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension  base="tns:NotificationBaseType">
                <xsd:sequence>
                    <xsd:element name="correlationId"   type="ftypes:UuidType" />
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>                
    </xsd:complexType>

    <xsd:complexType name="GenericAcknowledgmentType">
        <xsd:annotation>
            <xsd:documentation  xml:lang="en">
                Common acknowledgment message type.
                
                Elements:
                We have moved the correlationId to the header so this is
                now an empty response.
                
                Notes on acknowledgment:
                Depending on NSA implementation and thread timing an
                acknowledgment to a request operation may be returned
                after the confirm/fail for the request has been returned
                to the Requesting NSA.
                
                For protocol robustness, Requesting NSA should be
                able to accept confirm/fail before acknowledgment.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence />
    </xsd:complexType>
    
    <!-- ******************************************************************
         *             XML types used in message elements                 *
         ****************************************************************** -->

    <xsd:complexType name="ReservationRequestCriteriaType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for a reservation and modification request
                criteria.  Only those values requiring change are specified in
                the modify request.  The version value specified in a
                reservation or modify request must be a positive integer
                larger than the previous version number.  A version value of
                zero is a special number indicating an allocated but not yet
                reserved reservation and cannot be specified by the RA.
                
                Elements:
                
                schedule - Time parameters specifying the life of the service.
                
                serviceType - The specific service type of this reservation. 
                This service type string maps into the list of supported
                service descriptions defined by the network providers, and in
                turn, to the specific service elements carried in the
                serviceAttributes element required to specify the requested
                service.
                
                bandwidth - Bandwidth of the service in Mb/s.
                
                serviceAttributes - Technology specific attributes relating to
                the service.
                
                path - The source and destination end points of the service.
                Can optionally provide additional path segments to guide path
                computation.
                
                Attributes:
                
                version - The version number assigned by the RA to this
                reservation instance.  If not specified in the initial
                reservation request, the new reservation will default to one
                for the first version, however, an initial request can specify
                any positive integer except zero.  Each further reservation request
                on an exisitng reservation (a modify operation), will be assigned a
                linear increasing number, either specified by the RA, or
                assigned by the PA if not specified.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="schedule"            type="tns:ScheduleType" minOccurs="0" />
            <xsd:element name="serviceType"         type="xsd:string" minOccurs="0" />
            <xsd:element name="bandwidth"           type="xsd:int" minOccurs="0" />
            <xsd:element name="serviceAttributes"   type="tns:ServiceAttributesType" minOccurs="0" />
            <xsd:element name="path"                type="tns:PathType" minOccurs="0" />
        </xsd:sequence>
        <xsd:attribute   name="version"             type="xsd:int" use="optional" />
    </xsd:complexType>
    
    <xsd:complexType name="ReservationConfirmCriteriaType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for reservation confirmation information.
                Includes the reservation version id.
                
                Elements:
                
                schedule - Time parameters specifying the life of the service.
                
                serviceType - The specific service type of this reservation. 
                This service type string maps into the list of supported
                service descriptions defined by the network providers, and in
                turn, to the specific service elements carried in the
                serviceAttributes element required to specify the requested
                service.  
                
                bandwidth - Bandwidth of the service in Mb/s.
                
                serviceAttributes - Technology specific attributes relating to
                the service.
                
                path - The source and destination end points of the service.
                Can optionally provide additional path segments to guide path
                computation.
                
                Attributes:
                
                version - Version of the reservation instance.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="schedule"            type="tns:ScheduleType" />
            <xsd:element name="serviceType"         type="xsd:string" minOccurs="0" />
            <xsd:element name="bandwidth"           type="xsd:int" />
            <xsd:element name="serviceAttributes"   type="tns:ServiceAttributesType" minOccurs="0" />
            <xsd:element name="path"                type="tns:PathType" />
        </xsd:sequence>
        <xsd:attribute   name="version"             type="xsd:int" use="required" />
    </xsd:complexType>
    
    <xsd:complexType name="QuerySummaryResultType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
            Type containing the set of reservation parameters associated with
            a "Summary" query result.

            Elements:
            
            connectionId - The Provider NSA assigned connectionId for this
            reservation. This value will be unique within the context
            of the Provider NSA.
            
            globalReservationId - An optional global reservation id that can be
            used to correlate individual related service reservations through
            the network. This must be populated with a Universally Unique
            Identifier (UUID) URN as per ITU-T Rec. X.667 | ISO/IEC 9834-8:2005
            and IETF RFC 4122.
            
            description - An optional description for the service reservation.
            
            criteria - A set of versioned reservation criteria information.
            
            requesterNSA - The requester NSA associated with the reservation.

            connectionStates - The reservation's overall connection states.
            
            notificationId - If present represents the notification identifier
            of the most recent error notification against this reservation.
            The notificationId can be used in the queryNotification operation
            to retrieve the associated notification.
         </xsd:documentation>
      </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="ftypes:ConnectionIdType" />
            <xsd:element name="globalReservationId" type="tns:GlobalReservationIdType" minOccurs="0" />
            <xsd:element name="description"         type="xsd:string" minOccurs="0" />
            <xsd:element name="criteria"            type="tns:QuerySummaryResultCriteriaType" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="requesterNSA"        type="ftypes:NsaIdType" />
            <xsd:element name="connectionStates"    type="tns:ConnectionStatesType" />
            <xsd:element name="notificationId"      type="tns:NotificationIdType" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>
  
    <xsd:complexType name="QuerySummaryResultCriteriaType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the query summary result containing
                versioned reservation information and associated child
                connection identifiers.
                
                Elements:
                
                schedule - Time parameters specifying the life of the service.
                
                serviceType - The specific service type of this reservation. 
                This service type string maps into the list of supported
                service descriptions defined by the network providers, and in
                turn, to the specific service elements carried in the
                serviceAttributes element required to specify the requested
                service.  
                
                bandwidth - Bandwidth of the service in Mb/s.
                
                serviceAttributes - Technology specific attributes relating to
                the service.
                
                path - The source and destination end points of the service.
                Can optionally provide additional path segments to guide path
                computation.

                children - If this connection reservation is aggregating child
                connections then this element contains basic summary
                information about the child connection segment.

                Attributes:
                
                version - Version of the reservation instance.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="schedule"            type="tns:ScheduleType" />
            <xsd:element name="serviceType"         type="xsd:string" minOccurs="0" />
            <xsd:element name="bandwidth"           type="xsd:int" />
            <xsd:element name="serviceAttributes"   type="tns:ServiceAttributesType" minOccurs="0" />
            <xsd:element name="path"                type="tns:PathType" />
            <xsd:element name="children"            type="tns:ChildSummaryListType" minOccurs="0" />
        </xsd:sequence>
        <xsd:attribute   name="version"             type="xsd:int" use="required" />
    </xsd:complexType>
    
    <xsd:complexType name="ChildSummaryListType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A holder element containing a list of children NSA and their
                associated connection information. 
                
                Elements:
                
                child - Summary path information for a child NSA.  Each child
                element is ordered and contains a connection segment in the
                overall path.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="child" type="tns:SummaryPathType" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="SummaryPathType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This type is used to model a connection reservation's summary
                path information.  The structure provides the next level of
                connection information but not state.

                Attributes:
                
                order - Specification of ordered path elements.
                
                Elements:

                connectionId - The connection identifier associated with the
                reservation and path segment.
                
                providerNSA - The provider NSA holding the connection
                information associated with this instance of data.
                
                path - The summary path information associated with the
                connection reservation.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"    type="ftypes:ConnectionIdType" />
            <xsd:element name="providerNSA"     type="ftypes:NsaIdType" />
            <xsd:element name="path"            type="tns:PathType" minOccurs="0" />
        </xsd:sequence>
        <xsd:attribute name="order" type="xsd:int" use="required" />
    </xsd:complexType>
    
    <xsd:complexType name="QueryRecursiveResultType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This type contains the common reservation elements and detailed
                path data for "Recursive" query results.
                
                Elements:
                
                connectionId - The Provider NSA assigned connectionId for this
                reservation. This value will be unique within the context
                of the Provider NSA.
                
                globalReservationId - An optional global reservation id that can be
                used to correlate individual related service reservations through
                the network. This must be populated with a Universally Unique
                Identifier (UUID) URN as per ITU-T Rec. X.667 | ISO/IEC 9834-8:2005
                and IETF RFC 4122.
                
                description - An optional description for the service reservation.
                
                criteria - A set of versioned reservation criteria information.

                requesterNSA - The requester NSA associated with the reservation.

                connectionStates - The reservation's overall connection states.
                
                notificationId - If present represents the notification identifier
                of the most recent error notification against this reservation.
                The notificationId can be used in the queryNotification operation
                to retrieve the associated notification.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="ftypes:ConnectionIdType" />
            <xsd:element name="globalReservationId" type="tns:GlobalReservationIdType" minOccurs="0" />
            <xsd:element name="description"         type="xsd:string" minOccurs="0" />
            <xsd:element name="criteria"            type="tns:QueryRecursiveResultCriteriaType" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="requesterNSA"        type="ftypes:NsaIdType" />
            <xsd:element name="connectionStates"    type="tns:ConnectionStatesType" />
            <xsd:element name="notificationId"      type="tns:NotificationIdType" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="QueryRecursiveResultCriteriaType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the query recursive result containing
                versioned reservation information and associated child
                connection identifiers.
                
                Elements:
                
                schedule - Time parameters specifying the life of the service.
                
                serviceType - The specific service type of this reservation. 
                This service type string maps into the list of supported
                service descriptions defined by the network providers, and in
                turn, to the specific service elements carried in the
                serviceAttributes element required to specify the requested
                service.
                
                bandwidth - Bandwidth of the service in Mb/s.
                
                serviceAttributes - Technology specific attributes relating to
                the service.
                
                path - The source and destination end points of the service.
                Can optionally provide additional path segments to guide path
                computation.
                
                children - If this connection reservation is aggregating child
                connections then this element contains detailed information
                about the child connection segment.  The level of detail
                include is left up to the individual NSA and their
                authorization policies.
                
                Attributes:
                
                version - Version of the reservation instance.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="schedule"            type="tns:ScheduleType" />
            <xsd:element name="serviceType"         type="xsd:string" minOccurs="0" />
            <xsd:element name="bandwidth"           type="xsd:int" />
            <xsd:element name="serviceAttributes"   type="tns:ServiceAttributesType" minOccurs="0" />
            <xsd:element name="path"                type="tns:PathType" />
            <xsd:element name="children"           type="tns:ChildRecursiveListType" minOccurs="0" />
        </xsd:sequence>
        <xsd:attribute   name="version"             type="xsd:int" use="required" />
    </xsd:complexType>
    
    <xsd:complexType name="ChildRecursiveListType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A holder element providing an envelope that will contain the
                list of child NSA and associated detailed connection
                information.
                
                Elements:
                
                child - Detailed path information for a child NSA.  Each
                child element is ordered and contains a connection segment in
                the overall path.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="child" type="tns:RecursivePathType" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="RecursivePathType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This type is used to model a connection reservation's detailed 
                path information.  The structure is recursive so it is 
                possible to model both an ordered list of connection segments,
                as well as the hierarchical connection segments created on 
                children NSA in either a tree and chain configuration.
                
                Attributes:
                
                order - Specification of ordered path elements.
                
                Elements:
                
                connectionId - The connection identifier associated with the
                reservation and path segment.
                
                providerNSA - The provider NSA holding the connection
                information associated with this instance of data.
                
                connectionStates - This reservation's segments connection
                states.
                
                criteria - A set of versioned reservation criteria information.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"       type="ftypes:ConnectionIdType" />
            <xsd:element name="providerNSA"        type="ftypes:NsaIdType" />
            <xsd:element name="connectionStates"   type="tns:ConnectionStatesType" />
            <xsd:element name="criteria"           type="tns:QueryRecursiveResultCriteriaType" minOccurs="1" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:attribute name="order" type="xsd:int" use="required" />
    </xsd:complexType>
    
    <xsd:complexType name="ScheduleType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
             A type definition modeling the reservation schedule start and end
             time parameters.

            Elements:

            startTime - Reservation start time. If not specified then immediate
            reservation.

            endTime - Reservation end time.  If endTime is not specified then
            the schedule end is indefinite.
         </xsd:documentation>
      </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="startTime" type="ftypes:DateTimeType" minOccurs="0" />
            <xsd:element name="endTime"   type="ftypes:DateTimeType" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ServiceAttributesType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A holder type for externally specified service elements.  Element
                included in this type are based on the individual service definitions
                not defined in the NSI CS core specification.
                
                Elements:
                
                any - Provides a flexible mechanism allowing additional service
                elements to be provided relating to the requested service type.
                Use of this element field is beyond the current scope of this
                NSI CS specification, but will be specified in individual service
                definitions.
                
                Attributes:
                
                anyAttribute - Provides a flexible mechanism allowing additional
                attributes to be provided as needed for service specification.
                Use of this attribute field is beyond the current scope of this
                NSI CS specification, but will be specified in individual service
                definitions.            
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:anyAttribute namespace="##other" processContents="lax" />
    </xsd:complexType>
    
    <xsd:complexType name="PathType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Path of the service represented by a list of STP.
                
                Elements:
                
                directionality - The (uni or bi) directionality of the service.
                
                symmetricPath - An indication that both directions of a bidirectional
                circuit must fallow the same path.  Only applicable when
                directionality is "Bidirectional".  If not specified then value
                is assumed to be false.
                
                sourceSTP - Source STP of the service.
                
                destSTP - Destination STP of the service.
                
                ero - Hop-by-hop ordered list of STP from sourceSTP to
                destSTP. List does not include sourceSTP and destSTP.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="directionality"  type="tns:DirectionalityType" default="Bidirectional" />
            <xsd:element name="symmetricPath"   type="xsd:boolean" minOccurs="0" />
            <xsd:element name="sourceSTP"       type="tns:StpType" />
            <xsd:element name="destSTP"         type="tns:StpType" />
            <xsd:element name="ero"             type="tns:StpListType" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="StpType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                The Service Termination Point (STP) type used for path selection.
                 
                Elements:
                
                networkId - A globally unique identifier (URN) that identifies the
                Network.  Rather than forcing parsing of an STP to determine the
                Network, a separate Network object is defined to allow an
                intermediate NSA to forward the message to the target Network
                without needing to know about the STPs within that domain.
                
                localId - A locally unique identifier for the STP within the
                associated network.
                
                labels - Technology specific attributes associated with
                the Service Termination Point.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="networkId"       type="xsd:string" />
            <xsd:element name="localId"         type="xsd:string" />
            <xsd:element name="labels"          type="ftypes:TypeValuePairListType" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="StpListType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A simple ordered list type of Service Termination Point (STP). List
                order is determined by the integer order attribute in the orderedSTP
                element.
    
                Elements:
    
                orderedSTP - A list of STP ordered 0..n by their integer order attribute.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="orderedSTP" type="tns:OrderedStpType" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="OrderedStpType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A Service Termination Point (STP) that can be ordered in a list for
                use in PathObject definition.
    
                Attributes:
    
                order - Order attribute is provided only when the STP is part of an
                orderedStpList.
    
                Elements:
    
                stp - The Service Termination Point (STP).
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="stp" type="tns:StpType" />
        </xsd:sequence>
        <xsd:attribute   name="order" type="xsd:int" use="required" />
    </xsd:complexType>
    
    <xsd:complexType name="ConnectionStatesType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A holder element containing the state machines associated with
                a connection reservation.
                
                Elements:
                
                reservationState - Models the current connection reservation
                state.
                
                provisionState - Models the current connection provisioning
                state.  The provisionState is created for a reservation once
                the reservation is committed.
                
                lifecycleState - Models the current connection lifecycle state.
                
                dataPlaneStatus - Models the current connection data plane
                activation state.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="reservationState"   type="tns:ReservationStateEnumType" />
            <xsd:element name="provisionState"     type="tns:ProvisionStateEnumType" minOccurs="0" />
            <xsd:element name="lifecycleState"     type="tns:LifecycleStateEnumType" />
            <xsd:element name="dataPlaneStatus"    type="tns:DataPlaneStatusType" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="DataPlaneStatusType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Models the current connection activation state within the
                data plane.

                Elements:
                
                active - True if the dataplane is active.  For an aggregator,
                this flag is true when data plane is activated in all
                participating children.
                
                version - Version of the connection reservation this entry is
                modeling.
                
                versionConsistent - Always true for uPA. For an aggregator,
                if version numbers of all children are the same. This flag is
                true. This field is valid when Active is true.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="active"            type="xsd:boolean" />
            <xsd:element name="version"           type="xsd:int" />
            <xsd:element name="versionConsistent" type="xsd:boolean" />
        </xsd:sequence>
    </xsd:complexType>
    
   <!-- ******************************************************************
        *                       XML base types                           *
        ****************************************************************** -->
        
    <xsd:simpleType name="GlobalReservationIdType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A specific type for a globalReservationId just in case we need
                to change it in the future.  This type will be populated with
                a OGF URN (reference artifact 6478 "Procedure for Registration
                of Subnamespace Identifiers in the URN:OGF Hierarchy") to be
                used for compatibility with other external systems.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:anyURI" />
    </xsd:simpleType>

    <xsd:simpleType name="NotificationIdType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A specific type for a notificationId that is unique in the context
                of a connectionId.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:int" />
    </xsd:simpleType>
    
    <xsd:simpleType name="DirectionalityType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                The directionality of the requested data service.  Possible values
                are "Bidirectional" for a bidirectional data service, and
                "Unidirectional" for a unidirectional data service.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Bidirectional" />
            <xsd:enumeration value="Unidirectional" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="EventEnumType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Notification event message types.  Possible values are:
                
                activateFailed – Indicates that the data plane activation related
                to a reservation has failed, and therefore, there is no data plane
                connectivity for the reporting uPA.
                
                deactivateFailed – Indicates that deactivation of the data plane
                has failed, and as a result, data plane connectivity may still be
                in place.
                
                dataplaneError – Indicates that an error has occurred in the data
                plane and a loss of connectivity may be the result.
                
                forcedEnd – Indicates that the reservation was administratively
                terminated by a provider NSA within the network.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="activateFailed" />
            <xsd:enumeration value="deactivateFailed" />
            <xsd:enumeration value="dataplaneError" />
            <xsd:enumeration value="forcedEnd" />
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="ReservationStateEnumType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Connection reservation state values for the connection services
                reservation state machine.  Possible state values are:
                
                ReserveStart – A steady state for the reservation state machine
                in which a reservation is created and committed.  In the case
                of the first reservation request this state represents the
                initial reservation shell has been committed to database.
                
                ReserveChecking – A transient state modeling the act of checking
                the feasibility of a new reservation request, or a request to
                modify an existing reservation.
                
                ReserveFailed – A steady state for the reservation state machine
                in which the initial reservation or a subsequent modification
                request has failed.
                
                ReserveAborting - A transient state modeling the act of aborting a
                pending reservation modify request.
                
                ReserveHeld - A steady state for the reservation state machine in
                which the initial reservation or a subsequent modification request
                has successfully had the request resources reserved, but has not
                yet been committed.
                
                ReserveCommitting - A transient state modeling the act of committing
                a held set of reservation resources.
                
                ReserveTimeout - A steady state for the reservation state machine in
                which the held resources have been locally timed out on a uPA,
                resulting in a transition from the ReserveHeld to ReserveTimeout state.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="ReserveStart" />
            <xsd:enumeration value="ReserveChecking" />
            <xsd:enumeration value="ReserveFailed" />
            <xsd:enumeration value="ReserveAborting" />
            <xsd:enumeration value="ReserveHeld" />
            <xsd:enumeration value="ReserveCommitting" />
            <xsd:enumeration value="ReserveTimeout" />
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="ProvisionStateEnumType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Connection provisioning state values for modeling the connection
                services provision state machine.
                
                The Provision State Machine (PSM) is a simple state machine that
                transits between the Provisioned and the Released state. An instance
                of the PSM is created when an initial reservation is committed, and
                at that time it remains in the Released state. The PSM transits
                states independent of the state of the Reservation State Machine.
                Note that staying at the Provisioned state is necessary but not
                sufficient to activate the data plane. The data plane is active if
                the PSM is in “Provisioned” state AND current_time is between
                startTime and endTime.
                
                Possible state values are:
                
                Released – A steady state for the provision state machine in which data
                plane resources for this reservation are in a released state, resulting
                in an inactive data plane.
                
                Provisioning - A transient state modeling the act of provisioning the
                reservation’s associated data plane resources.
                
                Provisioned - A steady state for the provision state machine in which
                data plane resources for this reservation are in a provisioned state.
                This state does not imply that data plane resources are active, but it
                does indicate that a uPA can active the data plane resources if
                current_time is between startTime and endTime.
                
                Releasing - A transient state modeling the act of releasing the
                reservation’s associated data plane resources.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Released" />
            <xsd:enumeration value="Provisioning" />
            <xsd:enumeration value="Provisioned" />
            <xsd:enumeration value="Releasing" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="LifecycleStateEnumType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Connection lifecycle state values for the reservation lifecycle
                state machine.  The lifecycle state machine is instantiated when
                a reservation is committed.  Possible state values are:
                
                Created – A steady state for the lifecycle state machine and the
                initial state after a reservation has been committed.
                
                Failed – A steady state for the lifecycle state machine that is
                reached if a forcedEnd error is received from a uPA.
                
                PassedEndTime - The reservation has exceeded scheduled end time.
                
                Terminating - A transient state modeling the act of terminating
                the reservation.
                
                Terminated - A steady state for the lifecycle state machine that
                is reached when the reservation is terminated by the uRA.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Created" />
            <xsd:enumeration value="Failed" />
            <xsd:enumeration value="PassedEndTime" />
            <xsd:enumeration value="Terminating" />
            <xsd:enumeration value="Terminated" />
        </xsd:restriction>
    </xsd:simpleType>
</xsd:schema>
