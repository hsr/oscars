package net.es.oscars.pce;

import net.es.oscars.utils.sharedConstants.PCERequestTypes;
import org.apache.log4j.Logger;

import net.es.oscars.logging.ErrSev;
import net.es.oscars.logging.ModuleName;
import net.es.oscars.logging.OSCARSNetLogger;
import net.es.oscars.pce.soap.gen.v06.AggregatorCreateContent;
import net.es.oscars.pce.soap.gen.v06.AggregatorModifyContent;
import net.es.oscars.pce.soap.gen.v06.AggregatorCancelContent;
import net.es.oscars.pce.soap.gen.v06.AggregatorCreateCommitContent;
import net.es.oscars.pce.soap.gen.v06.AggregatorModifyCommitContent;
import net.es.oscars.pce.soap.gen.v06.PCECancelContent;
import net.es.oscars.pce.soap.gen.v06.PCECancelReplyContent;
import net.es.oscars.pce.soap.gen.v06.PCECreateCommitContent;
import net.es.oscars.pce.soap.gen.v06.PCECreateCommitReplyContent;
import net.es.oscars.pce.soap.gen.v06.PCEModifyCommitContent;
import net.es.oscars.pce.soap.gen.v06.PCEModifyCommitReplyContent;
import net.es.oscars.pce.soap.gen.v06.PCECreateContent;
import net.es.oscars.pce.soap.gen.v06.PCEModifyContent;
import net.es.oscars.pce.soap.gen.v06.PCEModifyReplyContent;
import net.es.oscars.pce.soap.gen.v06.PCEPortType;
import net.es.oscars.pce.soap.gen.v06.PCEReplyContent;

/**
 * This class was generated by Apache CXF 2.2.5
 * Fri Sep 03 13:25:47 PDT 2010
 * Generated source version: 2.2.5
 * 
 */

/** 
* This is effectively an abstract class that handles incoming PCE messages. 
* It is implemented in the Coordinator service by:
* SimplePCEProtocolHander which implements: pceCreate, pceCreateCommit, pceModifyCommit pceCancel and pceModify
* NullAggProtocolHandler which implements aggregatorCreate, pceCretaeCommit, pceModifyCommit, pceCancel and pceModify
* NullPCEProtocolHandler which implements pceCreate, pceCreateCommit, pceModifyCommit, pceCancel and pceModify
* 
* A PCEService must implement pceCreate, may implement the other 3 messages 
*    and may use/extend SimplePCEProtocol to do so.
* @author lomax
*
*/
@javax.jws.WebService(
       serviceName = "PCEService",
       portName = "PCEPortType",
       targetNamespace = "http://oscars.es.net/OSCARS/PCE/20090922",
       endpointInterface = "net.es.oscars.pce.soap.gen.v06.PCEPortType")
@javax.xml.ws.BindingType(value ="http://www.w3.org/2003/05/soap/bindings/HTTP/")
public class PCEProtocolHandler implements PCEPortType {

   private static final Logger LOG = Logger.getLogger(PCEProtocolHandler.class.getName());

    /* (non-Javadoc)
     * @see net.es.oscars.pce.soap.gen.v06.PCEPortType#pceCreateCommit(net.es.oscars.pce.soap.gen.v06.PCECreateCommitContent  pceCreateCommit )*
     */
    public void pceCreateCommit(PCECreateCommitContent pceCreateCommit) {
        OSCARSNetLogger netLogger = new OSCARSNetLogger(ModuleName.PCE, 
                        pceCreateCommit.getMessageProperties().getGlobalTransactionId());
        LOG.error(netLogger.error(PCERequestTypes.PCE_CREATE_COMMIT, ErrSev.MAJOR, "Executing operation pceCreateCommit in base class"));
        throw new RuntimeException("pceCreateCommit called in base method PCEProtocolHandler");
    }

    /* (non-Javadoc)
     * @see net.es.oscars.pce.soap.gen.v06.PCEPortType#pceModifyCommit(net.es.oscars.pce.soap.gen.v06.PCEModifyCommitContent  pceModifyCommit )*
     */
    public void pceModifyCommit(PCEModifyCommitContent pceModifyCommit) {
        OSCARSNetLogger netLogger = new OSCARSNetLogger(ModuleName.PCE,
                        pceModifyCommit.getMessageProperties().getGlobalTransactionId());
        LOG.error(netLogger.error(PCERequestTypes.PCE_MODIFY_COMMIT, ErrSev.MAJOR, "Executing operation pceModifyCommit in base class"));
        throw new RuntimeException("pceModifyCommit called in base method PCEProtocolHandler");
    }

    /* (non-Javadoc)
     * @see net.es.oscars.pce.soap.gen.v06.PCEPortType#pceCancelReply(net.es.oscars.pce.soap.gen.v06.PCECancelReplyContent  pceCancelReply )*
     */
    public void pceCancelReply(PCECancelReplyContent pceCancelReply) { 
        OSCARSNetLogger netLogger = new OSCARSNetLogger(ModuleName.PCE, 
                pceCancelReply.getMessageProperties().getGlobalTransactionId());
        LOG.error(netLogger.error(PCERequestTypes.PCE_CANCEL_REPLY, ErrSev.MAJOR,
                                  "Executing operation pceCancelReply in base class"));
         throw new RuntimeException("pceCancelReply called in base method PCEProtocolHandler");
    }

    /* (non-Javadoc)
     * @see net.es.oscars.pce.soap.gen.v06.PCEPortType#pceCreateCommitReply(net.es.oscars.pce.soap.gen.v06.PCECreateCommitReplyContent  pceCreateCommitReply )*
     */
    public void pceCreateCommitReply(PCECreateCommitReplyContent pceCreateCommitReply) {
        OSCARSNetLogger netLogger = new OSCARSNetLogger(ModuleName.PCE, 
                pceCreateCommitReply.getMessageProperties().getGlobalTransactionId());
        LOG.error(netLogger.error(PCERequestTypes.PCE_CREATE_COMMIT_REPLY, ErrSev.MAJOR,
                                  "Executing operation pceCreateCommitReply in base class"));
         throw new RuntimeException("pceCreateCommitReply called in base method PCEProtocolHandler");
    }
    /* (non-Javadoc)
     * @see net.es.oscars.pce.soap.gen.v06.PCEPortType#pceModifyCommitReply(net.es.oscars.pce.soap.gen.v06.PCEModifyCommitReplyContent  pceModifyCommitReply )*
     */
    public void pceModifyCommitReply(PCEModifyCommitReplyContent pceModifyCommitReply) {
        OSCARSNetLogger netLogger = new OSCARSNetLogger(ModuleName.PCE,
                pceModifyCommitReply.getMessageProperties().getGlobalTransactionId());
        LOG.error(netLogger.error(PCERequestTypes.PCE_MODIFY_COMMIT_REPLY, ErrSev.MAJOR,
                                  "Executing operation pceModifyCommitReply in base class"));
        throw new RuntimeException("pceModifyCommitReply called in base method PCEProtocolHandler");
    }

    /* (non-Javadoc)
     * @see net.es.oscars.pce.soap.gen.v06.PCEPortType#pceCancel(net.es.oscars.pce.soap.gen.v06.PCECancelContent  pceCancel )*
     */
    public void pceCancel(PCECancelContent pceCancel) { 
        OSCARSNetLogger netLogger = new OSCARSNetLogger(ModuleName.PCE, 
                pceCancel.getMessageProperties().getGlobalTransactionId());
        LOG.error(netLogger.error(PCERequestTypes.PCE_CANCEL, ErrSev.MAJOR,"Executing operation pceCancel in base class"));
        throw new RuntimeException("pceCancel called in base method PCEProtocolHandler");
    }

    /* (non-Javadoc)
     * @see net.es.oscars.pce.soap.gen.v06.PCEPortType#pceModifyReply(net.es.oscars.pce.soap.gen.v06.PCEModifyReplyContent  pceModifyReply )*
     */
    public void pceModifyReply(PCEModifyReplyContent pceModifyReply) { 
        OSCARSNetLogger netLogger = new OSCARSNetLogger(ModuleName.PCE, 
                pceModifyReply.getMessageProperties().getGlobalTransactionId());
        LOG.error(netLogger.error(PCERequestTypes.PCE_MODIFY_REPLY,
                                   ErrSev.MAJOR,"Executing operation pceModifyReply in base class"));
        throw new RuntimeException("pceModifyReply called in base method PCEProtocolHandler");
    }

    /* (non-Javadoc)
     * @see net.es.oscars.pce.soap.gen.v06.PCEPortType#pceModify(net.es.oscars.pce.soap.gen.v06.PCEModifyContent  pceModify )*
     */
    public void pceModify(PCEModifyContent pceModify) { 
        OSCARSNetLogger netLogger = new OSCARSNetLogger(ModuleName.PCE, 
                pceModify.getMessageProperties().getGlobalTransactionId());
        LOG.error(netLogger.error(PCERequestTypes.PCE_MODIFY, ErrSev.MAJOR,
                                  "Executing operation pceModify in base class"));
         throw new RuntimeException("pceModify called in base method PCEProtocolHandler");
    }

    /* (non-Javadoc)
     * @see net.es.oscars.pce.soap.gen.v06.PCEPortType#aggregatorModify(net.es.oscars.pce.soap.gen.v06.AggregatorModifyContent  aggregatorModify )*
     */
    public void aggregatorModify(AggregatorModifyContent aggregatorModify) {
        OSCARSNetLogger netLogger = new OSCARSNetLogger(ModuleName.PCE, 
                aggregatorModify.getMessageProperties().getGlobalTransactionId());
        LOG.error(netLogger.error(PCERequestTypes.AGGREGATOR_MODIFY, ErrSev.MAJOR,
                                  "Executing operation aggregatorModify in base class"));
         throw new RuntimeException("aggregatorModify called in base method PCEProtocolHandler");
    }

    /* (non-Javadoc)
     * @see net.es.oscars.pce.soap.gen.v06.PCEPortType#pceReply(net.es.oscars.pce.soap.gen.v06.PCEReplyContent  pceReply )*
     */
    public void pceReply(PCEReplyContent pceReply) { 
        OSCARSNetLogger netLogger = new OSCARSNetLogger(ModuleName.PCE, 
                pceReply.getMessageProperties().getGlobalTransactionId());
        LOG.error(netLogger.error(PCERequestTypes.PCE_REPLY, ErrSev.MAJOR,"Executing operation pceReply in base class"));
         throw new RuntimeException("pceReply called in base method PCEProtocolHandler");
    }

    /* (non-Javadoc)
     * @see net.es.oscars.pce.soap.gen.v06.PCEPortType#pceCreate(net.es.oscars.pce.soap.gen.v06.PCECreateContent  pceCreate )*
     */
    public void pceCreate(PCECreateContent pceCreate) { 
        OSCARSNetLogger netLogger = new OSCARSNetLogger(ModuleName.PCE, 
                pceCreate.getMessageProperties().getGlobalTransactionId());
        LOG.error(netLogger.error(PCERequestTypes.PCE_CREATE, ErrSev.MAJOR,"Executing operation pceCreate in base class"));
        throw new RuntimeException("pceCreate called in base method PCEProtocolHandler");
    }

    /* (non-Javadoc)
     * @see net.es.oscars.pce.soap.gen.v06.PCEPortType#aggregatorCreate(net.es.oscars.pce.soap.gen.v06.AggregatorCreateContent  aggregatorCreate )*
     */
    public void aggregatorCreate(AggregatorCreateContent aggregatorCreate) { 
        OSCARSNetLogger netLogger = new OSCARSNetLogger(ModuleName.PCE, 
                aggregatorCreate.getMessageProperties().getGlobalTransactionId());
        LOG.error(netLogger.error(PCERequestTypes.AGGREGATOR_CREATE, ErrSev.MAJOR,
                                  "Executing operation aggregatorCreate in base class"));
       throw new RuntimeException("aggregatorCreate called in base method PCEProtocolHandler");
    }
    public void aggregatorCreateCommit(AggregatorCreateCommitContent aggregatorCreateCommit) {
        OSCARSNetLogger netLogger = new OSCARSNetLogger(ModuleName.PCE, 
                aggregatorCreateCommit.getMessageProperties().getGlobalTransactionId());
        LOG.error(netLogger.error(PCERequestTypes.AGGREGATOR_CREATE_COMMIT, ErrSev.MAJOR,
                                  "Executing operation aggregatorCreateCcommit in base class"));
       throw new RuntimeException("aggregatorCreateCommit called in base method PCEProtocolHandler");
    }

    public void aggregatorModifyCommit(AggregatorModifyCommitContent aggregatorModifyCommit) {
        OSCARSNetLogger netLogger = new OSCARSNetLogger(ModuleName.PCE,
                aggregatorModifyCommit.getMessageProperties().getGlobalTransactionId());
        LOG.error(netLogger.error(PCERequestTypes.AGGREGATOR_MODIFY_COMMIT, ErrSev.MAJOR,
                                  "Executing operation aggregatorModifyCcommit in base class"));
       throw new RuntimeException("aggregatorModifyCommit called in base method PCEProtocolHandler");
    }

    public void aggregatorCancel(AggregatorCancelContent aggregatorCancel) { 
        OSCARSNetLogger netLogger = new OSCARSNetLogger(ModuleName.PCE, 
                aggregatorCancel.getMessageProperties().getGlobalTransactionId());
        LOG.error(netLogger.error(PCERequestTypes.AGGREGATOR_CANCEL, ErrSev.MAJOR,
                                  "Executing operation aggregatorCancel in base class"));
        throw new RuntimeException("aggregatorCancel called in base method PCEProtocolHandler");
    }


}
