#!/bin/sh
#
# Export configuration files from the distribution directory into the production directory.
#
# syntax: exportconfig <path_to_distribution> <patch_to_production>
#
#

SERVICE=AuthNService
MODULE=authN
POLICY_SERVICE=AuthNPolicyService

OSCARS_DIST=$1
OSCARS_HOME=$2
DST_LOGDIR=$3
BUILD_ROOT=$4

source $OSCARS_DIST/utils/bin/configLib.sh

verifyArgs $OSCARS_DIST $OSCARS_HOME
verifySvcName $SERVICE

SRC_DIR=$OSCARS_DIST/$MODULE/config/
DST_DIR=$OSCARS_HOME/$SERVICE/conf
POLICY_DST_DIR=$OSCARS_HOME/$POLICY_SERVICE/conf
if [ -n "$BUILD_ROOT" ]; then
    DST_DIR=${BUILD_ROOT}/${DST_DIR}
    POLICY_DST_DIR=${BUILD_ROOT}/${POLICY_DST_DIR}
    DST_DATADIR=${BUILD_ROOT}/${DST_DATADIR}
fi
if [ -z "$DST_LOGDIR" ]; then
    DST_LOGDIR=$OSCARS_HOME/logs
    mkdir -p $DST_LOGDIR
fi

mkdir -p $DST_DIR
mkdir -p $POLICY_DST_DIR

if [ ! -f $DST_DIR/$MANIFEST ] ; then
    cp $SRC_DIR/$MANIFEST  $DST_DIR/$MANIFEST      
fi

if [ ! -f $DST_DIR/$MODULE.HTTP.yaml ] ; then
    cp $SRC_DIR/$MODULE.HTTP.yaml $DST_DIR/$MODULE.HTTP.yaml
fi
if [ ! -f $DST_DIR/$MODULE.SSL.yaml ] ; then
    cp $SRC_DIR/$MODULE.SSL.yaml $DST_DIR/$MODULE.SSL.yaml
fi
if [ ! -f $POLICY_DST_DIR/authNPolicy.HTTP.yaml ] ; then
    cp $SRC_DIR/authNPolicy.HTTP.yaml $POLICY_DST_DIR/authNPolicy.HTTP.yaml
fi
if [ ! -f $POLICY_DST_DIR/authNPolicy.SSL.yaml ] ; then
    cp $SRC_DIR/authNPolicy.SSL.yaml $POLICY_DST_DIR/authNPolicy.SSL.yaml
fi
if [ ! -f $DST_DIR/authn.cfg.xml ]; then
    cp $SRC_DIR/authn.cfg.xml $DST_DIR/authn.cfg.xml
fi

# AuthNService cxf files
if [ ! -f $DST_DIR/$CXF_SERVER_HTTP_CFG ] ; then
    cp $SRC_DIR/$CXF_SERVER_HTTP_CFG  $DST_DIR/$CXF_SERVER_HTTP_CFG
fi
if [ ! -f $DST_DIR/$CXF_SERVER_SSL_CFG ] ; then
    cp $SRC_DIR/$CXF_SERVER_SSL_CFG  $DST_DIR/$CXF_SERVER_SSL_CFG
fi
if [ ! -f $DST_DIR/$CXF_CLIENT_HTTP_CFG ] ; then
    cp $SRC_DIR/$CXF_CLIENT_HTTP_CFG  $DST_DIR/$CXF_CLIENT_HTTP_CFG
fi
if [ ! -f $DST_DIR/$CXF_CLIENT_SSL_CFG ] ; then
    cp $SRC_DIR/$CXF_CLIENT_SSL_CFG  $DST_DIR/$CXF_CLIENT_SSL_CFG
fi

#AuthNPolicyService cxf files
if [ ! -f $POLICY_DST_DIR/$CXF_SERVER_HTTP_CFG ] ; then
    cp $SRC_DIR/policy-server-cxf-http.xml  $POLICY_DST_DIR/$CXF_SERVER_HTTP_CFG
fi
if [ ! -f $POLICY_DST_DIR/$CXF_SERVER_SSL_CFG ] ; then
    cp $SRC_DIR/policy-server-cxf-ssl.xml  $POLICY_DST_DIR/$CXF_SERVER_SSL_CFG
fi
if [ ! -f $POLICY_DST_DIR/$CXF_CLIENT_HTTP_CFG ] ; then
    cp $SRC_DIR/$CXF_CLIENT_HTTP_CFG  $POLICY_DST_DIR/$CXF_CLIENT_HTTP_CFG
fi
if [ ! -f $POLICY_DST_DIR/$CXF_CLIENT_SSL_CFG ] ; then
    cp $SRC_DIR/$CXF_CLIENT_SSL_CFG  $POLICY_DST_DIR/$CXF_CLIENT_SSL_CFG
fi

# log4j
if [ ! -f $DST_DIR/$LOG4J_PROPS_INFO ] ; then
    sed -e "s,$MODULE\.log,$DST_LOGDIR/$SERVICE.log," -e "s,oscars\.log,$DST_LOGDIR/oscars.log," -e "s,hibernate\.log,$DST_LOGDIR/hibernate.log," < $SRC_DIR/$LOG4J_PROPS_INFO > $DST_DIR/$LOG4J_PROPS_INFO
fi
if [ ! -f $DST_DIR/$LOG4J_PROPS_DEBUG ] ; then
    sed -e "s,$MODULE\.log,$DST_LOGDIR/$SERVICE.log," -e "s,oscars\.log,$DST_LOGDIR/oscars.log," -e "s,hibernate\.log,$DST_LOGDIR/hibernate.log," <  $SRC_DIR/$LOG4J_PROPS_DEBUG > $DST_DIR/$LOG4J_PROPS_DEBUG
    fi
if [ ! -f $DST_DIR/$LOG4J_PROPS_MESSAGE ] ; then
    sed -e "s,$MODULE\.log,$DST_LOGDIR/$SERVICE.log," -e "s,oscars\.log,$DST_LOGDIR/oscars.log," -e "s,hibernate\.log,$DST_LOGDIR/hibernate.log," <  $SRC_DIR/$LOG4J_PROPS_MESSAGE > $DST_DIR/$LOG4J_PROPS_MESSAGE
fi

